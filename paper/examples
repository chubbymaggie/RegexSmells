Matching a Username /^[a-z0-9_-]{3,16}$/ C1 D1 T1
Matching a Password /^[a-z0-9_-]{6,18}$/  C1 D1 T1
Matching a Hex Value /^#?([a-f0-9]{6}|[a-f0-9]{3})$/  D2 C1 S1 D3 T1
Matching a Slug /^[a-z0-9-]+$/  C1 L3

Matching an Email /^([a-z0-9_\.-]+)@([\da-z\.-]+)\.([a-z\.]{2,6})$/ C1 L3 C4 T1
 /^([a-z0-9_\.\+-]+)@([\da-z\.-]+)\.([a-z\.]{2,6})$/
C1 C4 D1 L3

Matching a URL /^(https?:\/\/)?([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w \.-]*)*\/?$/
	D2 C1 C4 D1  T1

Matching an IP Address 
/^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/

S1 C1 T1 D2

Matching an HTML Tag /^<([a-z]+)([^<]+)*(?:>(.*)<\/\1>|\s+\/>)$/
C1 L3 C2 L2 C4 

Phone with code  ^\+?[\d\s]+\(?[\d\s]{10,}$  D2 C4 L3 L1 T1
	         ^\+?[1-9]{1}[0-9]{3,14}$
		 ^\+[1-9]{1}[0-9]{7,11}$ 

Dollar amounts, specified with a leading $ symbol. \$[0-9]*.[0-9][0-9] C1 L2 S2
Date, in format such as "Jan 3, 2003" [A-Z][a-z][a-z] [0-9][0-9]*, [0-9]{4} S2 C1 L2 S1
----do not correct
----> could be better [A-Z][a-z][a-z] [0-9]+, [0-9][0-9][0-9][0-9]

Zip Code.
Five digits, followed by an optional hyphen and four additional digits.
[0-9]{5}(-[0-9]{4})?   D2 C1 S1

Get 0-255 ---S2 C1 
 [0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]. 
      [1-9]?[0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5] D2 or D3

[0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5].  S2 or S1

1..999: ^([1-9]|[1-9][0-9]|[1-9][0-9][0-9])$  D3 S2 

[1-9][0-9]?[0-9]? D2

 [-+]?([0-9]*\.[0-9]+|[0-9]+) better than   [-+]?[0-9]*\.?[0-9]+.   \.? ---(a.|a) D2 D3
This regular expression matches an optional sign, that is either followed by zero or more digits followed by a dot and one or more digits (a floating point number with optional integer part), or that is followed by one or more digits (an integer).

There is no way around the [0-9]+ part. We have successfully excluded the matches we do not want: those without digits.


